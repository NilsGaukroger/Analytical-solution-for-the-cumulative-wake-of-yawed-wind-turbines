# -*- coding: utf-8 -*-
"""
Created on Mon Aug 15 15:46:29 2022

@author: nilsg
"""

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.transforms as mtransforms
from post_utils2 import set_size

plt.rcParams.update({
  "text.usetex": True,
  "font.family": "Tex Gyre Adventor"
})
plt.rcParams['font.size'] = 10
plt.rcParams['axes.linewidth'] = 1
plt.rcParams['lines.linewidth'] = 2

textwidth = 448.0 # [pts]

fig_path = 'C:/Users/nilsg/Dropbox/Apps/Overleaf/Thesis/figures/05_modelImplementation/'

# PyWakeEllipSys
CT_curve = np.asarray([[3.0,  0.0  ],
                      [4.0,  0.913],
                      [5.0,  0.869],
                      [6.0,  0.780],
                      [7.0,  0.773],
                      [8.0,  0.770],
                      [9.0,  0.768],
                      [10.0, 0.765],
                      [11.0, 0.746],
                      [12.0, 0.533],
                      [13.0, 0.392],
                      [14.0, 0.305],
                      [15.0, 0.244],
                      [16.0, 0.200],
                      [17.0, 0.167],
                      [18.0, 0.142],
                      [19.0, 0.122],
                      [20.0, 0.106],
                      [21.0, 0.092],
                      [22.0, 0.082],
                      [23.0, 0.073],
                      [24.0, 0.065],
                      [25.0, 0.059]])

P_curve = np.asarray([[3.0,  0.0  ],
                      [4.0,  209.2],
                      [5.0,  444.8],
                      [6.0,  765.2],
                      [7.0,  1212.0],
                      [8.0,  1807.7],
                      [9.0,  2571.6],
                      [10.0, 3523.8],
                      [11.0, 4649.7],
                      [12.0, 5000.0],
                      [13.0, 5000.0],
                      [14.0, 5000.0],
                      [15.0, 5000.0],
                      [16.0, 5000.0],
                      [17.0, 5000.0],
                      [18.0, 5000.0],
                      [19.0, 5000.0],
                      [20.0, 5000.0],
                      [21.0, 5000.0],
                      [22.0, 5000.0],
                      [23.0, 5000.0],
                      [24.0, 5000.0],
                      [25.0, 5000.0]])

CP_curve = ((P_curve[:,1]*1e3/(1-0.059)) / (0.125 * 1.225 * 126.0**2 * np.pi * P_curve[:,0]**3))

CP_curve = np.vstack((P_curve[:,0], CP_curve[:])).T

# SOWFA
# CT_curve = np.asarray([[2.0,  1.4612728464576872],
#                     [2.5,  1.3891500248600195],
#                     [3.0,  1.268082754962957 ],
#                     [3.5,  1.1646999475504172],
#                     [4.0,  1.0793803926905128],
#                     [4.5,  1.0098020917279509],
#                     [5.0,  0.9523253671258429],
#                     [5.5,  0.9048200632193146],
#                     [6.0,  0.8652746358037285],
#                     [6.5,  0.8317749797630494],
#                     [7.0,  0.8032514305647592],
#                     [7.5,  0.7788892341777304],
#                     [8.0,  0.7730863447173755],
#                     [8.5,  0.7726206761501038],
#                     [9.0,  0.7721934195205071],
#                     [9.5,  0.7628473779358198],
#                     [10.0, 0.7459330274762097],
#                     [10.5, 0.7310049480450205],
#                     [11.0, 0.7177914274917664],
#                     [11.5, 0.799361832581412 ],
#                     [12.0, 0.8871279360742889],
#                     [12.5, 0.9504655842078242],
#                     [13.0, 1.0000251651970853],
#                     [13.5, 1.0390424010487957],
#                     [14.0, 1.0701572223736   ],
#                     [14.5, 1.0945877239199593]])

# SOWFA
# CP_curve = np.asarray([[2.0,  -0.2092219804533027],
#                     [2.5,  0.2352391893638198 ],
#                     [3.0,  0.46214453324002824],
#                     [3.5,  0.5476677311380832 ],
#                     [4.0,  0.5772456648046942],
#                     [4.5,  0.5833965967255043],
#                     [5.0,  0.5790298877294793],
#                     [5.5,  0.5701467792599509],
#                     [6.0,  0.5595564940228319],
#                     [6.5,  0.5480479331210222],
#                     [7.0,  0.5366246493538858],
#                     [7.5,  0.5258303873334416],
#                     [8.0,  0.5229191014420005],
#                     [8.5,  0.5224657416437077],
#                     [9.0,  0.5220516710065948],
#                     [9.5,  0.5175531496262384],
#                     [10.0, 0.5092952304943719],
#                     [10.5, 0.5016730194861562],
#                     [11.0, 0.4946298748497652],
#                     [11.5, 0.5326349577484786],
#                     [12.0, 0.5597671514540806],
#                     [12.5, 0.5679550280111124],
#                     [13.0, 0.5659876382489049],
#                     [13.5, 0.5572755521043566],
#                     [14.0, 0.5441595739848516],
#                     [14.5, 0.5280326705762761]])

#%% Plot
fig, axs = plt.subplots(1, 2, figsize=set_size(textwidth, 1, height_adjust=0.5))

axs[0].plot(CT_curve[:,0], CT_curve[:,1], 'ko-', markersize=5)
axs[0].set_xlabel('Disc velocity [m/s]')
axs[0].set_ylabel('$C_T$')

axs[1].plot(CP_curve[:,0], CP_curve[:,1], 'ko-', markersize=5)
axs[1].set_xlabel('Disc velocity [m/s]')
axs[1].set_ylabel('$C_P$')

plt.subplots_adjust(wspace=0.3)

# Label subplots
trans = mtransforms.ScaledTranslation(-20/72, 7/72, fig.dpi_scale_trans)
axs[0].text(0.13, 0.95, 'a)', transform=axs[0].transAxes + trans,
        fontsize='medium', va='bottom',  style='italic')
axs[1].text(0.13, 0.95, 'b)', transform=axs[1].transAxes + trans,
        fontsize='medium', va='bottom',  style='italic')

axs[0].set_xticks([0, 5, 10, 15, 20, 25])
axs[1].set_xticks([0, 5, 10, 15, 20, 25])

fig.savefig(fig_path + 'CT_CP.pdf', bbox_inches='tight')

plt.show()